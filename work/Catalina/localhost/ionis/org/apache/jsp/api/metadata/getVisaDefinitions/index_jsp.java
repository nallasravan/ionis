/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-08-13 13:38:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.api.metadata.getVisaDefinitions;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("application/json;charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("{\"data\":[{\"visacategory\":\"NIV\",\"visatype\":[{\"SATSNewCAPSubject\":\"SATS New CAP Subject\"},{\"Transfer\":\"Transfer\"},{\"Other\":\"Other\"},{\"Amendment\":\"Amendment\"},{\"2ndExtensionAmendment\":\"2nd+ Extension+Amendment\"},{\"H4withH1B\":\"H-4 (with H-1B)\"},{\"1st2ndExtTBD\":\"1st/2nd Ext (TBD)\"},{\"L1A\":\"L-1A\"},{\"L1B\":\"L-1B\"},{\"E3\":\"E-3\"},{\"TN\":\"TN\"},{\"TD\":\"TD\"},{\"NewNotSubjecttoCAP\":\"New Not Subject to CAP\"},{\"H4EADwithH1B\":\"H-4 & EAD (with H-1B)\"},{\"2ndExtension\":\"2nd+ Extension\"},{\"Withdrawal\":\"Withdrawal\"},{\"NOIR\":\"NOIR\"},{\"NOID\":\"NOID\"},{\"221g\":\"221(g)\"},{\"MTR\":\"MTR\"},{\"ASVVP\":\"ASVVP\"},{\"E3D\":\"E-3D\"},{\"L2\":\"L-2\"},{\"H4Individual\":\"H-4 Individual\"},{\"H4EADIndividual\":\"H-4 EAD Individual\"},{\"H4EADIndividual\":\"H-4 & EAD Individual\"},{\"1stExtension\":\"1st Extension\"},{\"1stExtensionAmendment\":\"1st Extension+Amendment\"},{\"I824\":\"I-824\"},{\"F1\":\"F-1\"},{\"F2\":\"F-2\"},{\"B2\":\"B-2\"},{\"B1\":\"B-1\"},{\"Concurrent\":\"Concurrent\"},{\"ConsularPackage\":\"Consular Package\"},{\"I601\":\"I-601\"},{\"AAOAppeal\":\"AAO Appeal\"},{\"AR11\":\"AR-11\"}]},{\"visacategory\":\"PERM\",\"visatype\":[{\"EB2MSOnly\":\"EB2 MS Only\"},{\"EB2MSExp\":\"EB2 MS+Exp\"},{\"EB2Bach5MS3\":\"EB2 Bach+5/MS+3\"},{\"EB3SkilledWorker\":\"EB-3 Skilled Worker\"},{\"EB3Professional\":\"EB-3 Professional\"},{\"EB2PortPriority\":\"EB-2 PortPriority\"},{\"EB3PortPriority\":\"EB-3 PortPriority\"},{\"EB3SkilledWorkerPortPriority\":\"EB-3 SkilledWorkerPortPriority\"},{\"EB2DMDDDS\":\"EB-2 DMD/DDS\"},{\"EB2PhD\":\"EB-2 PhD\"},{\"EB2PhD\":\"EB-2 PhD\"}]},{\"visacategory\":\"I140\",\"visatype\":[{\"EB3SkilledWorker\":\"EB-3 Skilled Worker\"},{\"EB3PortPriority\":\"EB-3 PortPriority\"},{\"EB2PortPriority\":\"EB-2 PortPriority\"},{\"EB3SkilledWorkerPortPriority\":\"EB-3 Skilled Worker Port Priority\"},{\"EB3Professional\":\"EB-3 Professional\"},{\"EB2MSOnly\":\"EB2 MS Only\"},{\"EB2MSExp\":\"EB2 MS+Exp\"},{\"EB2Bach5MS3\":\"EB2 Bach+5/MS+3\"},{\"Withdrawal\":\"Withdrawal\"}]},{\"visacategory\":\"I485\",\"visatype\":[{\"EB3Professional\":\"EB-3 Professional\"},{\"EB3SkilledWorkerPortPriority\":\"EB-3 Skilled Worker Port Priority\"},{\"EB2PortPriority\":\"EB-2 PortPriority\"},{\"EB3PortPriority\":\"EB-3 PortPriority\"},{\"EB3SkilledWorker\":\"EB-3 Skilled Worker\"},{\"EB2Bach5MS3\":\"EB2 Bach+5/MS+3\"},{\"EB2MSExp\":\"EB2 MS+Exp\"},{\"EB2MSOnly\":\"EB2 MS Only\"},{\"I485EAD\":\"I-485 EAD\"},{\"I485AP\":\"I-485 AP\"},{\"I485EADAP\":\"I-485 EAD+AP\"},{\"Interfile\":\"Interfile\"},{\"AC21\":\"AC-21\"},{\"I130I485\":\"I-130/I-485\"},{\"I485Dependent\":\"I-485 Dependent\"},{\"N400\":\"N-400\"},{\"NVC\":\"NVC\"},{\"I90\":\"I-90\"}]},{\"visacategory\":\"Civil\",\"visatype\":[{\"Family\":\"Family\"},{\"Civil\":\"Civil\"},{\"Corporate\":\"Corporate\"},{\"SriJagadish\":\"Sri Jagadish\"}]},{\"visacategory\":\"LCA\",\"visatype\":[{\"NewCapSubject\":\"New Cap Subject\"},{\"Transfer\":\"Transfer\"},{\"Amendment\":\"Amendment\"},{\"ExtensionAmendment\":\"Extension + Amendment\"},{\"Extension\":\"Extension\"},{\"New\":\"New\"},{\"ChangeofEndClient\":\"Change of End Client\"},{\"NewNotSubjecttoCAP\":\"New Not Subject to CAP\"},{\"Concurrent\":\"Concurrent\"}]},{\"visacategory\":\"Admin\",\"visatype\":[]},{\"visacategory\":\"Account\",\"visatype\":[]}]}");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
