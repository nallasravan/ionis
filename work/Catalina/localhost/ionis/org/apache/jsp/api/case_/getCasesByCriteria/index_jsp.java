/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-08-13 13:38:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.api.case_.getCasesByCriteria;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("application/json;charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("{\"trackingDocments\":[{\"Update_Date\":\"Nov 21, 2020 6:07:33 PM\",\"rfeuscisduedate\":\"Jan 1, 1900\",\"team\":\"5\",\"approvalstartdate\":\"Jan 1, 1900\",\"casecategoryid\":\"16WPD01_NIV_New Not Subject to CAP_1\",\"cosc\":\"WPD\",\"uscisduedate\":\"Jan 1, 1900\",\"beneficiary\":\"Working Rules for General Ledger\",\"casecategory\":\"MultiModal\",\"companyname\":\"SAP General Ledger\",\"receiptno\":\"\",\"casetype\":\"Sentence Chunking\",\"casestatus\":\"Sandbox\",\"email\":\"System\",\"trackingid\":\"KB_SAP_01\"},{\"Update_Date\":\"Nov 21, 2020 6:07:31 PM\",\"rfeuscisduedate\":\"Jan 1, 1900\",\"team\":\"5\",\"approvalstartdate\":\"Jan 1, 1900\",\"casecategoryid\":\"16TEST02_NIV_Amendment_1\",\"cosc\":\"TEST\",\"uscisduedate\":\"Jun 25, 2016\",\"beneficiary\":\"Anomaly Detection from Logs.\",\"casecategory\":\"Text\",\"companyname\":\"Logs\",\"receiptno\":\"eac1462561\",\"casetype\":\"Amendment\",\"casestatus\":\"Construction\",\"email\":\"System\",\"trackingid\":\"KB_LOGS_v01\"},{\"Update_Date\":\"Nov 21, 2020 6:07:32 PM\",\"rfeuscisduedate\":\"Jan 1, 1900\",\"team\":\"5\",\"approvalstartdate\":\"Jan 1, 1900\",\"casecategoryid\":\"16TEST02_NIV_1st Extension_1\",\"cosc\":\"TEST\",\"uscisduedate\":\"Jun 25, 2016\",\"beneficiary\":\"System Metadata for Context\",\"casecategory\":\"Text\",\"companyname\":\"Metadata\",\"receiptno\":\"\",\"casetype\":\"1st Extension\",\"casestatus\":\"Published\",\"email\":\"System\",\"trackingid\":\"KB_META_02\"}]}\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
